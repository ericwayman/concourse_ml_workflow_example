---
resources:
- name: push_data_to_db_repo
  type: git
  source:
    uri: https://github.com/ericwayman/concourse_ml_workflow_example.git
    branch: master
    paths:
      - 04_pipeline_train_from_data_in_db/__init__.py
      - 04_pipeline_train_from_data_in_db/dbcredentials.py
      - 04_pipeline_train_from_data_in_db/push_data_to_db.py

- name: train_model_repo
  type: git
  source:
    uri: https://github.com/ericwayman/concourse_ml_workflow_example.git
    branch: master
    paths:
      - 04_pipeline_train_from_data_in_db/__init__.py
      - 04_pipeline_train_from_data_in_db/dbcredentials.py
      - 04_pipeline_train_from_data_in_db/train_model.py

- name: parameter_files
  type: git
  source:
    uri: https://github.com/ericwayman/parameters_concourse_ml_workflow_example.git
    branch: master

- name: model_logs
  type: git
  source:
    uri: git@github.com:ericwayman/model_logs_concourse_ml_workflow_example.git
    branch: master
    private_key: {{github-private-key}}

- name: train_test_tables_repo
  type: git
  source:
    uri: git@github.com:ericwayman/model_logs_concourse_ml_workflow_example.git
    branch: master
    paths:
      - 04_pipeline_train_from_data_in_db/train_test_tables/
    private_key: {{github-private-key}}

jobs:
- name: push_data_to_db
  public: true
  plan:
  - aggregate:
    - get: push_data_to_db_repo
    - get: train_test_tables_repo
  - task: task_push_data_to_db
    params:
      TRAIN_TABLE: {{TRAIN_TABLE}}
      TEST_TABLE: {{TEST_TABLE}}
      SCHEMA: {{SCHEMA}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ericwayman/concourse-demo, tag: v2}
      inputs:
      - name: push_data_to_db_repo
      run:
        path: /bin/sh
        args: [-c,python push_data_to_db_repo/04_pipeline_train_from_data_in_db/push_data_to_db.py {{database}} {{host}} {{port}} {{user}} {{password}}]
  - task: task_commit_table_names_file_to_repo
    params:
      TRAIN_TABLE: {{TRAIN_TABLE}}
      TEST_TABLE: {{TEST_TABLE}}
      SCHEMA: {{SCHEMA}}
      TABLE_NAME_FILE: {{TABLE_NAME_FILE}}
    file: task_commit_table_names_file_to_repo.yml
  - put: train_test_tables_repo
    params: {repository: new_table_names}


- name: train_model_save_logs
  public: true
  plan:
  - aggregate:
    - get: train_model_repo
    - get: parameter_files
      trigger: true
    - get: model_logs

  - task: task_train_model_save_logs
    params:
      BATCH_SIZE: {{BATCH_SIZE}}
      NB_EPOCH: {{NB_EPOCH}}
      #train, test_table and schema need to be set by grabbing them from train_test_tables_repo and setting as environment variables
      TRAIN_TABLE: {{TRAIN_TABLE}}
      TEST_TABLE: {{TEST_TABLE}}
      SCHEMA: {{SCHEMA}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ericwayman/concourse-demo, tag: v2}
      inputs:
      - name: train_model_repo
      - name: parameter_files
      outputs:
      - name: new_log_dir
      run: 
        path: /bin/sh
        args: [-c,python train_model_repo/04_pipeline_train_from_data_in_db/train_model.py {{database}} {{host}} {{port}} {{user}} {{password}}]

  - task: commit_file_to_log_repo
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: concourse/git-resource}
      inputs:
      - name: new_log_dir
      - name: model_logs
      outputs:
      - name: updated_model_logs
      run: 
        path: /bin/sh
        args:
        - -c
        - cp -a model_logs/. updated_model_logs/ && cp new_log_dir/model.log updated_model_logs && cd updated_model_logs && git add . && git commit -m "test"
  - put: model_logs
    params: {repository: updated_model_logs}
